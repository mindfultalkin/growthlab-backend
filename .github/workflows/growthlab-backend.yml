name: Deploy to ECS

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

env:
  IMAGE_TAG: ${{ github.sha }}
  TASK_DEF_TEMPLATE: .github/workflows/taskDef.json
  ECR_REPOSITORY: mindfultalkin-growthlab-backend-prod
  CONTAINER_NAME: mindfultalkin-growthlab-backend-prod
  ECS_CLUSTER: mindfultalk-prod
  ECS_SERVICE: mindfultalk-growthlab-backend-prod-service-0oco3rjp
  

jobs:
  deploy:
    name: Deploy to ECS Fargate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::325599888975:role/OIDCRole
          aws-region: ap-south-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Build, tag, and push Docker image to ECR
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI -f Dockerfile
          docker push $IMAGE_URI

      - name: Render new ECS task definition
        id: render-task
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.TASK_DEF_TEMPLATE }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.IMAGE_URI }}

      - name: Deploy ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          task-definition: ${{ steps.render-task.outputs.task-definition }}
          wait-for-service-stability: true
